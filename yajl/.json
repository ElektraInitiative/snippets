{
    "kde": {
        "kmail": {
            "v4.14.1": {
                "messages-unencrypted": {
                    "reader": {
                        "store-displayed-messages-unencrypted": "true"
                    }
                }
            }
        }
    },
    "nanana.batman": {
        "git": {
            "v1": {
                "pro-test": {
                    "branch": {
                        "autosetuprebase": "always"
                    },
                    "commit": {
                        "gpgsign": "true"
                    },
                    "core": {
                        "editor": "mate -w\nquotepath = false"
                    },
                    "diff": {
                        "tool": "Kaleidoscope"
                    },
                    "difftool \"Kaleidoscope\"": {
                        "cmd": "ksdiff --partial-changeset --relative-path \\\"$MERGED\\\" -- \\\"$LOCAL\\\" \\\"$REMOTE\\\""
                    },
                    "difftool \"sourcetree\"": {
                        "cmd": "opendiff \\\"$LOCAL\\\" \\\"$REMOTE\\\"\npath ="
                    },
                    "filter \"lfs\"": {
                        "clean": "git-lfs clean %f\nsmudge = git-lfs smudge %f\nrequired = true"
                    },
                    "git-tmbundle": {
                        "ext-app": "stree\next-custom-cmd = ksdiff"
                    },
                    "gpg": {
                        "program": "/usr/local/bin/gpg"
                    },
                    "merge": {
                        "tool": "Kaleidoscope"
                    },
                    "mergetool \"Kaleidoscope\"": {
                        "cmd": "ksdiff --merge --output \\\"$MERGED\\\" --base \\\"$BASE\\\" -- \\\"$LOCAL\\\" --snapshot \\\"$REMOTE\\\" --snapshot\ntrustexitcode = true"
                    },
                    "mergetool \"sourcetree\"": {
                        "cmd": "/Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \\\"$LOCAL\\\" \\\"$REMOTE\\\" -ancestor \\\"$BASE\\\" -merge \\\"$MERGED\\\"\ntrustExitCode = true"
                    },
                    "user": {
                        "name": "ðŸ˜Ž"
                    }
                }
            }
        }
    },
    "none": {
        "gtimelog": {
            "v0.9": {
                "gtimelog": {
                    "gtimelog": {
                        "edit_task_list_cmd": "",
                        "editor": "vim",
                        "gtk-completion": "True",
                        "hours": "10",
                        "list-email": "contact@markus-raab.org",
                        "mailer": "xdg-email mailto:%s",
                        "name": "Markus Raab",
                        "spreadsheet": "oocalc %s",
                        "task_list_url": "",
                        "virtual_midnight": "04:00"
                    }
                }
            }
        },
        "hosts": {
            "v1": {
                "augeas-localhost": "",
                "localhost": ""
            }
        },
        "mutt": {
            "v1": {
                "muttrc": {
                    "set folder": "~/Mail/",
                    "set from": "contact@markus-raab.org",
                    "set mask": "!^\\\\.[^.]",
                    "set mbox_type": "Maildir",
                    "set postponed": "+.pk-mutt-postponed",
                    "set realname": "Markus Raab",
                    "set record": "+.pk-mutt-record",
                    "set spoolfile": "~/Mail/"
                }
            }
        },
        "test": {
            "v1": {
                "git-commit-test": {
                    "andmore": "value2",
                    "newval": "because i want to test the update",
                    "singleexport": "works :)",
                    "somemore": "otherval",
                    "someval": "somevar",
                    "update": "pretty"
                }
            }
        },
        "testini": {
            "v1": {
                "test": {
                    "life": {
                        "purpose": "none"
                    }
                }
            }
        },
        "unison": {
            "v2.40.102": {
                "multi-computer-setup": ""
            }
        },
        "vim": {
            "v8": {
                "vimrc": ""
            }
        },
        "zsh": {
            "v5": {
                "zshrc": [
                    "#.zshrc",
                    "# code to execute at shell startup",
                    "",
                    "",
                    "#elektra configuration:",
                    "#",
                    "# should replace aliases, exports and hashes below",
                    "#",
                    "# Source functions in /etc/profile.d/",
                    "#",
                    "#for i in /etc/profile.d/* ; do",
                    "#    if [ -r \"$i\" ]; then",
                    "#        #echo sourcing $i",
                    "#        source $i",
                    "#    fi",
                    "#done",
                    "",
                    "#some aliases",
                    "alias a=\"sudo aptitude\"\t\t# run aptitude",
                    "alias o=\"open-file-by-name\"",
                    "alias d=\"diff -pruN\"\t\t# differences between files",
                    "alias r=\"recode latin1..utf8\"\t# recode a file",
                    "alias s=\"festival --tts\"\t# speak something out",
                    "alias p='ps -fu $USER'\t\t# show own processes",
                    "alias u='uptime'\t\t# show how long system is up",
                    "alias l=\"ls\"\t\t\t# spell correction of ls",
                    "alias s=\"ls\"\t\t\t# spell correction of ls",
                    "alias up=\"sudo ifup\"",
                    "alias no=\"yes n\"\t\t# why not having no too?",
                    "alias ls=\"ls --color=auto\"\t# make ls colourful",
                    "alias sl=\"ls\"\t\t\t# spell correction of ls too",
                    "alias mv='nocorrect mv'\t\t#",
                    "alias cp='nocorrect cp'\t\t#",
                    "alias rm='nocorrect rm'\t\t#",
                    "alias du=\"du -h --max-depth=1\"\t#",
                    "alias cd/='cd /'\t\t# forgot a space for cd",
                    "alias cd..='cd ..'\t\t# forgot a space for cd",
                    "alias mkdir='nocorrect mkdir'\t#",
                    "alias man='nocorrect man'\t#",
                    "alias kdb='nocorrect noglob kdb'",
                    "alias bin/kdb='nocorrect noglob bin/kdb'",
                    "alias kdb-full='nocorrect noglob kdb-full'",
                    "alias bin/kdb-full='nocorrect noglob bin/kdb-full'",
                    "alias kdb-static='nocorrect noglob kdb-static'",
                    "alias bin/kdb-static='nocorrect noglob bin/kdb-static'",
                    "alias find='noglob find'\t#",
                    "alias make='nocorrect make'\t# do not correct make test to tests if \"tests\" folder is present",
                    "alias down=\"sudo ifdown\"",
                    "alias diet-gcc=\"diet gcc -s -Os -pipe\"",
                    "alias remod=\"sudo rmmod ipw2200 && sudo modprobe ipw2200 \"",
                    "alias list=\"sudo iwlist eth1 scan\" ",
                    "alias gping=\"ping www.google.at\"",
                    "alias starte=\"kfmclient exec\"",
                    "alias xfig=\"xfig -specialtext -latexfonts -startlatexFont default\"",
                    "alias lintian=\"lintian -EI --color=auto --pedantic\"",
                    "alias reprepro=\"reprepro -b ~reprepro\"",
                    "alias git-undo-last-commit=\"git reset --soft HEAD~\"",
                    "alias clang-format=\"clang-format-3.8 -style=file -i \"",
                    "",
                    "#autocomplete aliases:",
                    "zstyle ':completion:*' completer _expand_alias _complete _ignored",
                    "",
                    "",
                    "",
                    "",
                    "# ^A:multiuser on[RET]",
                    "# screen -x",
                    "",
                    "# presentation using aliases (for completion)",
                    "alias 0=\"man man --elektra:MANWIDTH=40\"",
                    "",
                    "# KONFIGURATIONSDATEIEN per key/value zugreifen",
                    "",
                    "alias 1='kdb set user/env/override/MANOPT -- \"-LC\"'",
                    "",
                    "# PROXY Ã„NDERN",
                    "",
                    "alias 3=\"kdb set system/env/override/http_proxy http://proxy.hogege.com:8000\"",
                    "",
                    "alias 5=\"wget --elektra-debug www.complang.tuwien.ac.at\"",
                    "",
                    "# MOTIVATION ftp proxy, auch Ã¼ber Konfigurationsdatei im Paper",
                    "",
                    "alias 4=\"kdb setmeta spec/env/override/ftp_proxy 'override/#0' /env/override/http_proxy\"",
                    "",
                    "# Umsetzung",
                    "",
                    "alias 6=\"kdb get -v /env/override/ftp_proxy\"",
                    "",
                    "",
                    "#alias 5=\"kdb set user/env/option/debug\"",
                    "",
                    "# kann man weglassen",
                    "alias 2='kdb mount env.ini /env ni'",
                    "",
                    "# kdb file /env",
                    "",
                    "#pipes stderr",
                    "#alias -g P='>&2 2>&1 |'",
                    "",
                    "# Creates a directory and changes into it at one command",
                    "function mkcd() {",
                    "\t[ -n \"$1\" ] && mkdir -p \"$@\" && cd \"$1\"",
                    "}",
                    "",
                    "#some hashes",
                    "#(more in .zshrc-local or elektra)",
                    "hash -d m=/home/user/MyDocs",
                    "",
                    "HISTFILE=${HOME}/.zsh_history\t# name of history file",
                    "HISTSIZE=500000\t\t\t# internal history (larger for duplicated events)",
                    "SAVEHIST=450000\t\t\t# history in files",
                    "DIRSTACKSIZE=10\t\t\t# stack of directories",
                    "MAIL=/var/mail/$USERNAME\t# where are new mails?",
                    "MAILCHECK=30\t\t\t# check mails every 30 sec",
                    "#REPLYTO=ich@markus-raab.org\t# reply to",
                    "LOGCHECK=30\t\t\t# check login/logout every 30 sec",
                    "",
                    "unset TMOUT\t\t\t# don't timeout the session",
                    "",
                    "bindkey -v                      # vi key bindings",
                    "",
                    "bindkey \"^[[A\" history-beginning-search-backward",
                    "bindkey \"^[[B\" history-beginning-search-forward",
                    "# Use up and down key to search in the history with the current text",
                    "# !word<tab> will autocomplete in the history",
                    "# (up and down key can be used afterwards too)",
                    "# use <ESC> + / to search backwards in the history (? to search forward)",
                    "# (n(next) and N(previous) will scroll in the history in this mode)",
                    "",
                    "",
                    "setopt always_to_end\t\t# move to end of word when completing",
                    "setopt append_history\t\t# don't overwrite history file (multiple!)",
                    "setopt share_history\t\t# share history between multiple sessions",
                    "setopt auto_cd\t\t\t# change to directory when entering it as command",
                    "setopt auto_menu\t\t# use menu completion",
                    "setopt auto_pushd\t\t# cd will push old directory on stack",
                    "setopt NO_hup\t\t\t# don't HUP running jobs when shell exits",
                    "setopt NO_beep\t\t\t# don't beep around",
                    "setopt NO_hist_beep\t\t# also don't beep at no history",
                    "setopt NO_list_beep\t\t#",
                    "setopt correct_all\t\t# correct all arguments in a line",
                    "setopt extended_glob\t\t# tread ~, ^ as part of patterns",
                    "setopt extended_history\t\t# save timestamps of history",
                    "setopt glob_complete\t\t# cycle through glob possibilities",
                    "setopt hist_expire_dups_first\t# duplicate internal events",
                    "setopt hist_find_no_dups\t# but don't find duplicates",
                    "setopt hist_ignore_all_dups\t# and ignore them",
                    "setopt hist_ignore_dups\t\t# and don't put same commands to history",
                    "setopt hist_ignore_space\t# first character a space -> don't put to history",
                    "setopt hist_reduce_blanks\t# reduce blanks from command line in history",
                    "setopt hist_save_no_dups\t# older commands that duplicate are omitted",
                    "setopt hist_verify\t\t# perform history expansion and reload line",
                    "setopt interactive_comments\t# i always want comments",
                    "setopt list_packed\t\t# put list in columns",
                    "setopt list_types\t\t# show trailing identifying mark",
                    "setopt null_glob\t\t# delete globs without match instead of asking",
                    "setopt pushd_ignore_dups\t# ignore dups on directory stack",
                    "setopt pushd_silent\t\t# be silent after pushd and popd",
                    "#setopt completion-ignore-case",
                    "",
                    "",
                    "zstyle ':completion:*:cd:*' ignore-parents parent pwd #cd will never select the parent directory (e.g.: cd ../<TAB>):",
                    "",
                    "# prompt, right prompt, don't see XX possibilities and spelling prompt",
                    "EXITCODE=\"%(?..%?%1v )\"",
                    "#old one without exit codes:",
                    "#PS1=$'%{\\e[0;36m%}%n@%m:%4c%1v%{\\e[0m%}> '",
                    "",
                    "PS1=$'%(?..%?%1v )%{\\e[0;36m%}%n@%m:%4c%1v%{\\e[0m%}> '",
                    "RPS1=$'%{\\e[0;36m%}%D{%A %T}%{\\e[0m%}'",
                    "",
                    "# FOR asciinema:",
                    "#PS1=$'%(?..%?%1v )%{\\e[0;36m%}%4c%1v%{\\e[0m%}> '",
                    "#RPS1=",
                    "#alias sudo='nocorrect sudo'",
                    "LISTPROMPT=''",
                    "SPROMPT='zsh: correct '%R' to '%r' ? ([Y]es/[N]o/[E]dit/[A]bort) '",
                    "LPDEST=lj",
                    "",
                    "#activate coredumps",
                    "ulimit -c unlimited",
                    "",
                    "#load other modules from ~/.zshfiles",
                    "fpath=(~/.zshfiles $fpath)",
                    "autoload -U ~/.zshfiles*(:t)",
                    "",
                    "#load compinit",
                    "autoload -U compinit\t\t# full features tab completion",
                    "compinit -C\t\t\t# start the tab completion",
                    "zmodload -i zsh/complist\t# Color completion (For menu selection)",
                    "",
                    "#load local files",
                    ". ~/.zshrc-local",
                    ". ~/.env.sh",
                    "",
                    "#list running screens",
                    "#if [[ -x $(which screen) ]]",
                    "#then",
                    "#    ZSHRC_SCREENLIST=(${${(M)${(f)\"$(screen -ls)\"}:#(#s)?:space:##([0-9]##).*}/(#b)?:space:#([0-9]##).*/$match[1]})",
                    "#    if [[ $#ZSHRC_SCREENLIST -ge 1 ]]",
                    "#    then",
                    "#        echo \"There are $#ZSHRC_SCREENLIST screens running. $ZSHRC_SCREENLIST\"",
                    "#    fi",
                    "#fi",
                    "",
                    "#for i in viins vicmd; do",
                    "#\tbindkey -M \"$i\" \"${key[Up]}\" vi-up-line-or-history",
                    "#\tbindkey -M \"$i\" \"${key[Down]}\" vi-down-line-or-history",
                    "#done",
                    "#unset i",
                    "",
                    "#[[ -n \"${key[Up]}\" ]] && bindkey \"${key[Up]}\" history-search-backward",
                    "#[[ -n \"${key[Down]}\" ]] && bindkey \"${key[Down]}\" history-search-forward",
                    "",
                    "#switch between vim and shell",
                    "fancy-ctrl-z () {",
                    "\tif [[ $#BUFFER -eq 0 ]]; then",
                    "\t\tBUFFER=\"fg\"",
                    "\t\tzle accept-line",
                    "\telse",
                    "\t\tzle push-input",
                    "\t\tzle clear-screen",
                    "\tfi",
                    "}",
                    "zle -N fancy-ctrl-z",
                    "bindkey '^Z' fancy-ctrl-z",
                    "",
                    "autoload up-line-or-beginning-search",
                    "autoload down-line-or-beginning-search",
                    "zle -N up-line-or-beginning-search",
                    "zle -N down-line-or-beginning-search",
                    "",
                    "[[ -n \"${key[Up]}\"      ]]  && bindkey   \"${key[Up]}\"       up-line-or-beginning-search",
                    "[[ -n \"${key[Down]}\"    ]]  && bindkey   \"${key[Down]}\"    down-line-or-beginning-search",
                    "",
                    "#start up screen, if not already in",
                    "#if [ -z $STY ]; then",
                    "#        screen -D -R",
                    "#fi"
                ]
            }
        }
    },
    "org.apache": {
        "apache": {
            "v2.4.10": {
                "apache2-configuration-of-wwwlibelektraorg": [
                    "<IfModule mod_ssl.c>",
                    "<VirtualHost *:443>",
                    "        ServerName www.libelektra.org",
                    "        ServerAdmin webmaster@libelektra.org",
                    "",
                    "        DocumentRoot \"/usr/local/share/elektra/tool_data/rest-frontend/public\"",
                    "        Alias \"/ftp\" \"/srv\"",
                    "",
                    "        <Directory />",
                    "                FallbackResource /index.html",
                    "                Options +Indexes +MultiViews",
                    "                AllowOverride None",
                    "                Require all granted",
                    "                Allow from all",
                    "        </Directory>",
                    "",
                    "        <Directory /srv>",
                    "                FallbackResource disabled",
                    "                Options +Indexes +MultiViews",
                    "                AllowOverride None",
                    "                Require all granted",
                    "                Allow from all",
                    "        </Directory>",
                    "",
                    "        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,",
                    "        # error, crit, alert, emerg.",
                    "        # It is also possible to configure the loglevel for particular",
                    "        # modules, e.g.",
                    "        LogLevel info",
                    "",
                    "        ErrorLog ${APACHE_LOG_DIR}/error.log",
                    "        CustomLog ${APACHE_LOG_DIR}/access.log combined",
                    "",
                    "        # For most configuration files from conf-available/, which are",
                    "        # enabled or disabled at a global level, it is possible to",
                    "        # include a line for only one particular virtual host. For example the",
                    "        # following line enables the CGI configuration for this host only",
                    "        # after it has been globally disabled with \"a2disconf\".",
                    "        #Include conf-available/serve-cgi-bin.conf",
                    "",
                    "        SSLCertificateFile /etc/letsencrypt/live/restapi.libelektra.org/fullchain.pem",
                    "        SSLCertificateKeyFile /etc/letsencrypt/live/restapi.libelektra.org/privkey.pem",
                    "        Include /etc/letsencrypt/options-ssl-apache.conf",
                    "</VirtualHost>",
                    "",
                    "# vim: syntax=apache ts=4 sw=4 sts=4 sr noet",
                    "</IfModule>"
                ]
            }
        }
    }
}
