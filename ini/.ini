none/mutt/v1/muttrc/set mbox_type = Maildir
none/test/v1/git-commit-test/someval = somevar

none/mutt/v1/muttrc/set spoolfile = ~/Mail/
none/test/v1/git-commit-test/somemore = otherval
none/mutt/v1/muttrc/set folder = ~/Mail/
none/test/v1/git-commit-test/andmore = value2
none/mutt/v1/muttrc/set mask = !^\\.[^.]
none/test/v1/git-commit-test/newval = because i want to test the update
none/mutt/v1/muttrc/set record = +.pk-mutt-record
none/test/v1/git-commit-test/update = pretty
none/mutt/v1/muttrc/set postponed = +.pk-mutt-postponed
none/test/v1/git-commit-test/singleexport = works :)

none/mutt/v1/muttrc/set from = contact@markus-raab.org
none/mutt/v1/muttrc/set realname = Markus Raab
[kde/kmail/v4.14.1]
[kde/kmail/v4.14.1/messages-unencrypted/reader]
[nanana.batman/git/v1/pro-test/user]
[none/gtimelog/v0.9/gtimelog/gtimelog]
[none/testini/v1/test/life]
#@META author = markus
#@META createdat = 1482256098
#@META description = Allow mails to be stored unencrypted (e.g. if hard disc is already encrypted).

To be saved as part as .kde/share/config/kmail2rc (e.g. using kdb import)
#@META plugin = ini
#@META tags = kmail kmail2 kde encryption security usability very-short
#@META title = kmail2 messages unencrypted
#@META views = 8
[kde/kmail/v4.14.1]
messages-unencrypted = 
messages-unencrypted/reader/store-displayed-messages-unencrypted = true
[nanana.batman/git/v1/pro-test/user]
name = ðŸ˜Ž
[none/gtimelog/v0.9/gtimelog/gtimelog]
list-email = contact@markus-raab.org
[none/testini/v1/test/life]
purpose = none
[none/gtimelog/v0.9/gtimelog/gtimelog]
mailer = xdg-email mailto:%s
name = Markus Raab
edit_task_list_cmd = 
spreadsheet = oocalc %s
virtual_midnight = 04:00
hours = 10
editor = vim
task_list_url = 
gtk-completion = True
[nanana.batman/git/v1]
[none/gtimelog/v0.9]
[none/hosts/v1]
[none/unison/v2.40.102]
#@META author = WhyUNotWork
#@META createdat = 1482333135
#@META description = ðŸ¤¡ðŸ¤ ðŸ˜±
#@META plugin = ini
#@META tags = 
#@META title = Pro-Test
#@META views = 4
[nanana.batman/git/v1]
pro-test = 
#@META author = markus
#@META createdat = 1482255216
#@META description = snippet for gtimelog
#@META plugin = ini
#@META tags = timelog tracker gtimelog short
#@META title = gtimelog
#@META views = 3
[none/gtimelog/v0.9]
gtimelog = 
#@META author = markus
#@META createdat = 1482142522
#@META description = hosts file for localhost, imported with augeas
#@META plugin = augeas lens=Hosts.lns
#@META tags = hosts localhost
#@META title = hosts file for localhost
[none/hosts/v1]
augeas-localhost = 
#@META author = markus
#@META createdat = 1482255501
#@META description = from+real-name for muttrc
#@META plugin = line
#@META tags = simpleini ini muttrc short
#@META title = muttrc
[none/unison/v2.40.102]
multi-computer-setup = 
#@META author = markus
#@META createdat = 1482142433
#@META description = localhost hosts file
#@META plugin = hosts
#@META tags = hosts localhost
#@META title = localhost hosts
[none/hosts/v1]
localhost = 
[none/mutt/v1]
[none/vim/v8]
#@META author = markus
#@META createdat = 1482255501
#@META description = from+real-name for muttrc
#@META plugin = ini
#@META tags = ini muttrc short
#@META title = muttrc
#@META views = 4
[none/mutt/v1]
muttrc = 
[none/vim/v8]
vimrc = 
vimrc/#0 = "" Configuration file for vim"
vimrc/#1 = 
vimrc/#2 = set nocompatible
vimrc/#3 = filetype off
vimrc/#4 = 
vimrc/#5 = ""sometimes used (temporary):"
vimrc/#6 = ""set paste"
vimrc/#7 = ""set textwidth=72"
vimrc/#8 = ""set colorcolumn=72"
vimrc/#9 = ""set ignorecase"
vimrc/#_10 = 
vimrc/#_11 = "set tabpagemax=80"
vimrc/#_12 = "set swb=usetab " use :sb to jump to a file per name"
vimrc/#_13 = 
vimrc/#_14 = "" To start vundle use:"
vimrc/#_15 = """
vimrc/#_16 = "" git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle"
vimrc/#_17 = "" vim +BundleInstall +qall"
vimrc/#_18 = """
vimrc/#_19 = "" See also https://github.com/gmarik/Vundle.vim"
vimrc/#_20 = "set rtp+=~/.vim/bundle/vundle/"
vimrc/#_21 = call vundle#rc()
vimrc/#_22 = 
vimrc/#_23 = "" https://github.com/gmarik/vundle"
vimrc/#_24 = """
vimrc/#_25 = "" Bundles are in .vim/bundle and .vim/autoload? (but not .vim/plugin)"
vimrc/#_26 = """
vimrc/#_27 = "" :BundleInstall       - install bundles (note to add them below in config)"
vimrc/#_28 = ""                        To install new bundles, use :BundleInstall and press tab"
vimrc/#_29 = "" :BundleInstall!      - update all bundles"
vimrc/#_30 = "" :BundleList          - list configured bundles"
vimrc/#_31 = "" :BundleSearch(!) foo - search(or refresh cache first) for foo"
vimrc/#_32 = "" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles"
vimrc/#_33 = """
vimrc/#_34 = "" see :h vundle for more details or"
vimrc/#_35 = "" https://github.com/gmarik/vundle/blob/master/doc/vundle.txt"
vimrc/#_36 = "" NOTE: comments after Bundle command are not allowed.."
vimrc/#_37 = """
vimrc/#_38 = "" let Vundle manage Vundle"
vimrc/#_39 = "" required! "
vimrc/#_40 = Bundle 'gmarik/vundle'
vimrc/#_41 = 
vimrc/#_42 = "" For latex"
vimrc/#_43 = Bundle 'git://vim-latex.git.sourceforge.net/gitroot/vim-latex/vim-latex'
vimrc/#_44 = 
vimrc/#_45 = "" For async dispatch"
vimrc/#_46 = Bundle 'git://github.com/tpope/vim-dispatch.git'
vimrc/#_47 = 
vimrc/#_48 = ""disable folding at startup"
vimrc/#_49 = ":let Tex_FoldedSections="""
vimrc/#_50 = ":let Tex_FoldedEnvironments="""
vimrc/#_51 = ":let Tex_FoldedMisc="""
vimrc/#_52 = ":let Tex_CompileRule_dvi="make""
vimrc/#_53 = "":let Tex_CompileRule_dvi="latexmk""
vimrc/#_54 = "":let g:Tex_DefaultTargetFormat = 'pdf'"
vimrc/#_55 = "":let g:Tex_CompileRule_pdf = 'latexmk -pdf -pvc $*'"
vimrc/#_56 = 
vimrc/#_57 = 
vimrc/#_58 = "" needs  7.3.584 (wheezy), installed using vim-addon-manager"
vimrc/#_59 = ""Bundle 'https://github.com/Valloric/YouCompleteMe.git'"
vimrc/#_60 = 
vimrc/#_61 = "" For git integration"
vimrc/#_62 = Bundle 'git://github.com/tpope/vim-fugitive.git'
vimrc/#_63 = 
vimrc/#_64 = "" For clang-format"
vimrc/#_65 = Bundle 'https://github.com/rhysd/vim-clang-format'
vimrc/#_66 = 
vimrc/#_67 = "" Define own operators easily (recommended by clang-format)"
vimrc/#_68 = Bundle 'https://github.com/kana/vim-operator-user'
vimrc/#_69 = 
vimrc/#_70 = "" CLang completion (not used anymore, included in YouCompleteMe)"
vimrc/#_71 = ""Bundle 'clang-complete'"
vimrc/#_72 = 
vimrc/#_73 = "" For Markdown"
vimrc/#_74 = Bundle 'godlygeek/tabular'
vimrc/#_75 = Bundle 'plasticboy/vim-markdown'
vimrc/#_76 = "let g:vim_markdown_folding_disabled=1"
vimrc/#_77 = 
vimrc/#_78 = 
vimrc/#_79 = "" Use :NERDTree to show the directory layout"
vimrc/#_80 = """
vimrc/#_81 = ""    Use the natural vim navigation keys hjkl to navigate the files."
vimrc/#_82 = ""    Press o to open the file in a new buffer or open/close directory."
vimrc/#_83 = ""    Press t to open the file in a new tab."
vimrc/#_84 = ""    Press i to open the file in a new horizontal split."
vimrc/#_85 = ""    Press s to open the file in a new vertical split."
vimrc/#_86 = ""    Press p to go to parent directory."
vimrc/#_87 = ""    Press r to refresh the current directory."
vimrc/#_88 = """
vimrc/#_89 = "" See http://www.catonmat.net/blog/vim-plugins-nerdtree-vim/"
vimrc/#_90 = Bundle 'The-NERD-tree'
vimrc/#_91 = 
vimrc/#_92 = "" Finds a project together with The-NERD_tree"
vimrc/#_93 = Bundle 'NERD_tree-Project'
vimrc/#_94 = 
vimrc/#_95 = "" autocomplete code snippets"
vimrc/#_96 = Bundle 'snipMate'
vimrc/#_97 = 
vimrc/#_98 = "" Use :A to quickly change between header/source"
vimrc/#_99 = """
vimrc/#__100 = "" :AS splits and switches"
vimrc/#__101 = "" :AV vertical splits and switches"
vimrc/#__102 = "" :AT new tab and switches"
vimrc/#__103 = "" :AN cycles through matches"
vimrc/#__104 = "" :IH switches to file under cursor"
vimrc/#__105 = "" :IHS splits and switches"
vimrc/#__106 = "" :IHV vertical splits and switches"
vimrc/#__107 = "" :IHT new tab and switches"
vimrc/#__108 = "" :IHN cycles through matches "
vimrc/#__109 = Bundle 'a.vim'
vimrc/#__110 = 
vimrc/#__111 = "" makes % much more powerful"
vimrc/#__112 = "" (jump to anything what opens or closes)"
vimrc/#__113 = Bundle 'matchit.zip'
vimrc/#__114 = 
vimrc/#__115 = "" Doxygen support"
vimrc/#__116 = "" use :Dox to document a function"
vimrc/#__117 = """
vimrc/#__118 = "" see .vim/bundle/DoxygenToolkit.vim/README"
vimrc/#__119 = """
vimrc/#__120 = "" Config for DoxygenToolkit:"
vimrc/#__121 = """
vimrc/#__122 = ""let g:DoxygenToolkit_commentType="C++""
vimrc/#__123 = ""let g:DoxygenToolkit_briefTag_pre="""
vimrc/#__124 = ""let g:DoxygenToolkit_paramTag_pre="\\param ""
vimrc/#__125 = ""let g:DoxygenToolkit_returnTag="\\return ""
vimrc/#__126 = Bundle 'DoxygenToolkit.vim'
vimrc/#__127 = 
vimrc/#__128 = "" \cc .. commit to repository"
vimrc/#__129 = "" \ca .. add to repository"
vimrc/#__130 = "" \cD .. delete from repository"
vimrc/#__131 = "" \cs .. status of repository"
vimrc/#__132 = "" \cd .. show diff"
vimrc/#__133 = "" \cv .. show vimdiff"
vimrc/#__134 = "" \cl .. show log"
vimrc/#__135 = Bundle 'git://repo.or.cz/vcscommand'
vimrc/#__136 = 
vimrc/#__137 = Plugin 'rust-lang/rust.vim'
vimrc/#__138 = 
vimrc/#__139 = 
vimrc/#__140 = "" Needed for bundle (? breaks python with tabs):"
vimrc/#__141 = ""filetype plugin indent on"
vimrc/#__142 = 
vimrc/#__143 = ""Ex mode is useless, let us quit the application:"
vimrc/#__144 = map Q :qa<CR>
vimrc/#__145 = 
vimrc/#__146 = ""map <C-Q> :qa<CR>"
vimrc/#__147 = 
vimrc/#__148 = 
vimrc/#__149 = 
vimrc/#__150 = 
vimrc/#__151 = """
vimrc/#__152 = "" END OF BUNDLE CONFIGURATION"
vimrc/#__153 = """
vimrc/#__154 = 
vimrc/#__155 = 
vimrc/#__156 = 
vimrc/#__157 = 
vimrc/#__158 = 
vimrc/#__159 = ""show options when pressing tab"
vimrc/#__160 = set wildmenu
vimrc/#__161 = "set wildmode=list:longest"
vimrc/#__162 = 
vimrc/#__163 = function! Kdb(var)
vimrc/#__164 = "	let shellcmd='kdb get user/sw/vim/' . a:var"
vimrc/#__165 = "	let output=system(shellcmd)"
vimrc/#__166 = "	return output"
vimrc/#__167 = endfunction
vimrc/#__168 = 
vimrc/#__169 = 
vimrc/#__170 = "set backupdir=~/tmp,/var/tmp,/tmp,."
vimrc/#__171 = "set directory=~/tmp,/var/tmp,/tmp,."
vimrc/#__172 = 
vimrc/#__173 = function! KdbList(var)
vimrc/#__174 = "	let shellcmd='for i in `kdb ls user/sw/vim/' . a:var . '`; do echo -n ","; kdb get -n "$i"; done'"
vimrc/#__175 = "	let output=system(shellcmd)"
vimrc/#__176 = "	return output"
vimrc/#__177 = endfunction
vimrc/#__178 = 
vimrc/#__179 = "set dictionary=/usr/share/dict/words"
vimrc/#__180 = "set complete=i"
vimrc/#__181 = "set tags=/home/markus/.ctags,.ctags"
vimrc/#__182 = ""let &tags=KdbList('tags')"
vimrc/#__183 = ""let shellcmd='for i in `kdb ls user/sw/vim/path`; do echo -n ","; kdb get -n "$i"; done'"
vimrc/#__184 = ""let output=system(shellcmd)"
vimrc/#__185 = ""let &path='.' . output"
vimrc/#__186 = ""let &path='.' . KdbList('path')"
vimrc/#__187 = 
vimrc/#__188 = ""do not modify runtimepath, instead use vim-addons install.."
vimrc/#__189 = ""set runtimepath=~/.vim,/usr/share/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim72,/usr/share/vim/vimfiles/after,~/.vim/after"
vimrc/#__190 = 
vimrc/#__191 = 
vimrc/#__192 = "" Normally we use vim-extensions. If you want true vi-compatibility"
vimrc/#__193 = "" remove change the following statements"
vimrc/#__194 = syntax enable
vimrc/#__195 = 
vimrc/#__196 = ""grey tab markers"
vimrc/#__197 = "set listchars=tab:>-,trail:."
vimrc/#__198 = set list
vimrc/#__199 = "highlight SpecialKey ctermbg=Black ctermfg=DarkGrey"
vimrc/#__200 = 
vimrc/#__201 = ""reox tipps"
vimrc/#__202 = set nu
vimrc/#__203 = 
vimrc/#__204 = ""map <F7> :'<,'>!xclip<CR><CR>"
vimrc/#__205 = ""vmap <F7> "*y"
vimrc/#__206 = ""map <S-F7> :r!xclip -o<CR>"
vimrc/#__207 = 
vimrc/#__208 = 
vimrc/#__209 = au! Syntax {cpp,c,h,idl}
vimrc/#__210 = au Syntax {cpp,c,h,idl} runtime syntax/doxygen.vim
vimrc/#__211 = 
vimrc/#__212 = "set spell		" Use spell correction"
vimrc/#__213 = "set nocompatible	" Use Vim defaults instead of 100% vi compatibility"
vimrc/#__214 = "set backspace=indent,eol,start	" more powerful backspacing"
vimrc/#__215 = set cindent
vimrc/#__216 = "set nobackup		" Don't keep a backup file"
vimrc/#__217 = "set viminfo='20,\"1000	" read/write a .viminfo file, don't store more than"
vimrc/#__218 = "			" 1000 lines of registers"
vimrc/#__219 = "set history=1000	" keep 1000 lines of command line history"
vimrc/#__220 = "set ruler		" show the cursor position all the time"
vimrc/#__221 = 
vimrc/#__222 = "hi SpellBad ctermfg=White ctermbg=Black cterm=underline"
vimrc/#__223 = "hi SpellCap ctermfg=White ctermbg=Black cterm=underline"
vimrc/#__224 = 
vimrc/#__225 = "" Set xterm title"
vimrc/#__226 = ""set title"
vimrc/#__227 = 
vimrc/#__228 = "" Copy and paste for X"
vimrc/#__229 = "" You need to install xsel for it"
vimrc/#__230 = "" (even without X support. If you have X support use the * register)"
vimrc/#__231 = command -range Xc :silent :<line1>,<line2>w !xsel -i
vimrc/#__232 = command -range Xp :silent :r !xsel -o
vimrc/#__233 = 
vimrc/#__234 = "" Define shortcuts"
vimrc/#__235 = "" (is needed because user commands must start uppercase)"
vimrc/#__236 = ca xc Xc
vimrc/#__237 = ca xp Xp
vimrc/#__238 = 
vimrc/#__239 = 
vimrc/#__240 = "" Suffixes that get lower priority when doing tab completion for filenames."
vimrc/#__241 = "" These are files we are not likely to want to edit or read."
vimrc/#__242 = "set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc"
vimrc/#__243 = 
vimrc/#__244 = 
vimrc/#__245 = "" Debian uses compressed helpfiles. We must inform vim that the main"
vimrc/#__246 = "" helpfiles is compressed. Other helpfiles are stated in the tags-file."
vimrc/#__247 = "" set helpfile=$VIMRUNTIME/doc/help.txt"
vimrc/#__248 = 
vimrc/#__249 = "" For reportbug"
vimrc/#__250 = augroup filetype
vimrc/#__251 = "  au BufRead reportbug.*		set ft=mail"
vimrc/#__252 = "  au BufRead reportbug-*		set ft=mail"
vimrc/#__253 = augroup END
vimrc/#__254 = 
vimrc/#__255 = "" The following are commented out as they cause vim to behave a lot"
vimrc/#__256 = "" different from regular vi. They are highly recommended though."
vimrc/#__257 = "set showcmd		" Show (partial) command in status line."
vimrc/#__258 = "set showmatch		" Show matching brackets."
vimrc/#__259 = "set incsearch		" Incremental search"
vimrc/#__260 = "set autowrite		" Automatically save before commands like :next and :make"
vimrc/#__261 = "set hls			" Make highlights coloured"
vimrc/#__262 = "set magic		" Interprets '*.' in patterns"
vimrc/#__263 = 
vimrc/#__264 = "" Functions"
vimrc/#__265 = "let spellst = ["de", "en_gb"]"
vimrc/#__266 = "let langcnt = 0"
vimrc/#__267 = function Sel_lang()
vimrc/#__268 = "	let g:langcnt = (g:langcnt+1) % len(g:spellst)"
vimrc/#__269 = "	let lang = g:spellst[g:langcnt]"
vimrc/#__270 = "	" echo "language " . lang . " selected""
vimrc/#__271 = "	exe "set spelllang=" . lang"
vimrc/#__272 = endfunction
vimrc/#__273 = 
vimrc/#__274 = "" Choose german as default"
vimrc/#__275 = ""call Sel_lang()"
vimrc/#__276 = ""call Sel_lang()"
vimrc/#__277 = 
vimrc/#__278 = "" http://vim.wikia.com/wiki/Search_across_multiple_lines"
vimrc/#__279 = "" Search for the ... arguments separated with whitespace (if no '!'),"
vimrc/#__280 = "" or with non-word characters (if '!' added to command)."
vimrc/#__281 = function! SearchMultiLine(bang, ...)
vimrc/#__282 = "  if a:0 > 0"
vimrc/#__283 = "    let sep = (a:bang) ? '\_W\+' : '\_s\+'"
vimrc/#__284 = "    let @/ = join(a:000, sep)"
vimrc/#__285 = "  endif"
vimrc/#__286 = endfunction
vimrc/#__287 = "command! -bang -nargs=* -complete=tag S call SearchMultiLine(<bang>0, <f-args>)|normal! /<C-R>/<CR>"
vimrc/#__288 = "" use :S <words..> or :S! <words..>"
vimrc/#__289 = 
vimrc/#__290 = ""From gentoo:"
vimrc/#__291 = "" When editing a file, always jump to the last cursor position"
vimrc/#__292 = " autocmd BufReadPost *"
vimrc/#__293 = "       \ if ! exists("g:leave_my_cursor_position_alone") |"
vimrc/#__294 = "       \    if line("'\"") > 0 && line ("'\"") <= line("$") |"
vimrc/#__295 = "       \        exe "normal g'\"" |"
vimrc/#__296 = "       \    endif |"
vimrc/#__297 = "       \ endif"
vimrc/#__298 = 
vimrc/#__299 = "" Mappings"
vimrc/#__300 = "map <C-[C> <w> " next word"
vimrc/#__301 = "map <C-[D> <b> " prev word"
vimrc/#__302 = nmap <Esc>l :call Sel_lang()<CR>
vimrc/#__303 = 
vimrc/#__304 = "nmap <C-left> :tabprevious<cr> "
vimrc/#__305 = "map <C-left> :tabprevious<cr> "
vimrc/#__306 = imap <C-left> <c-o>:tabprevious<cr>
vimrc/#__307 = 
vimrc/#__308 = "nmap <C-right> :tabnext<cr> "
vimrc/#__309 = "map <C-right> :tabnext<cr> "
vimrc/#__310 = imap <C-right> <c-o>:tabnext<cr>
vimrc/#__311 = 
vimrc/#__312 = "nmap <C-t> :tabnew<cr> "
vimrc/#__313 = "imap <C-t> <ESC>:tabnew<cr> "
vimrc/#__314 = 
vimrc/#__315 = "" \ has an awkward position on german keyboards, so lets use something else!"
vimrc/#__316 = "let mapleader=",""
vimrc/#__317 = "map <C-l> <C-]>	" Follow _L_ink on Ctrl+l"
vimrc/#__318 = 
vimrc/#__319 = "" OmniCppComplete"
vimrc/#__320 = "" let OmniCpp_NamespaceSearch = 1"
vimrc/#__321 = "" let OmniCpp_GlobalScopeSearch = 1"
vimrc/#__322 = "" let OmniCpp_ShowAccess = 1"
vimrc/#__323 = "" let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters"
vimrc/#__324 = "" let OmniCpp_MayCompleteDot = 1 " autocomplete after ."
vimrc/#__325 = "" let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->"
vimrc/#__326 = "" let OmniCpp_MayCompleteScope = 1 " autocomplete after ::"
vimrc/#__327 = "" let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]"
vimrc/#__328 = "" " automatically open and close the popup menu / preview window"
vimrc/#__329 = "" "au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif"
vimrc/#__330 = "" set completeopt=menuone,menu,longest,preview"
vimrc/#__331 = 
vimrc/#__332 = 
vimrc/#__333 = 
vimrc/#__334 = "" python settings"
vimrc/#__335 = ""from http://svn.python.org/projects/python/trunk/Misc/Vim/vimrc"
vimrc/#__336 = ""(excluding C settings)"
vimrc/#__337 = "" au BufRead,BufNewFile *.py,*.pyw set shiftwidth=4"
vimrc/#__338 = "" au BufRead,BufNewFile *.py,*.pyw set expandtab"
vimrc/#__339 = "" highlight BadWhitespace ctermbg=red guibg=red"
vimrc/#__340 = "" au BufRead,BufNewFile *.py,*.pyw match BadWhitespace /^\t\+/"
vimrc/#__341 = "" au BufRead,BufNewFile *.py,*.pyw match BadWhitespace /\s\+$/"
vimrc/#__342 = "" au BufRead,BufNewFile *.py,*.pyw set textwidth=79"
vimrc/#__343 = 
vimrc/#__344 = 
vimrc/#__345 = ""-- pandoc Markdown+LaTeX -------------------------------------------"
vimrc/#__346 = "" http://www.piware.de/2014/07/vim-config-for-markdownlatex-pandoc-editing/"
vimrc/#__347 = 
vimrc/#__348 = function s:MDSettings()
vimrc/#__349 = "    inoremap <buffer> <Leader>n \note[item]{}<Esc>i"
vimrc/#__350 = "    noremap <buffer> <Leader>b :! pandoc -t beamer % -o %<.pdf<CR><CR>"
vimrc/#__351 = "    noremap <buffer> <Leader>l :! pandoc -t latex % -o %<.pdf<CR>"
vimrc/#__352 = "    noremap <buffer> <Leader>v :! evince %<.pdf 2>&1 >/dev/null &<CR><CR>"
vimrc/#__353 = 
vimrc/#__354 = "    " adjust syntax highlighting for LaTeX parts"
vimrc/#__355 = "    "   inline formulas:"
vimrc/#__356 = "    syntax region Statement oneline matchgroup=Delimiter start="\$" end="\$""
vimrc/#__357 = "    "   environments:"
vimrc/#__358 = "    syntax region Statement matchgroup=Delimiter start="\\begin{.*}" end="\\end{.*}" contains=Statement"
vimrc/#__359 = "    "   commands:"
vimrc/#__360 = "    syntax region Statement matchgroup=Delimiter start="{" end="}" contains=Statement"
vimrc/#__361 = endfunction
vimrc/#__362 = 
vimrc/#__363 = autocmd BufRead,BufNewFile *.md setfiletype markdown
vimrc/#__364 = autocmd FileType markdown :call <SID>MDSettings()
vimrc/#__365 = 
vimrc/#__366 = "" latex mappings and abbreviations"
vimrc/#__367 = 
vimrc/#__368 = "ab .= \doteq"
vimrc/#__369 = ab para Â§
vimrc/#__370 = ino Â§ \
vimrc/#__371 = 
vimrc/#__372 = 
vimrc/#__373 = 
vimrc/#__374 = 
vimrc/#__375 = source ~/.vimrc-local
[none/test/v1]
[none/zsh/v5]
#@META author = Namoshek
#@META createdat = 1482142616
#@META description = tests git auto-commit
#@META plugin = ini
#@META tags = test
#@META title = git commit test
#@META views = 78
[none/test/v1]
git-commit-test = 
[none/zsh/v5]
zshrc = 
zshrc/#0 = "#.zshrc"
zshrc/#1 = "# code to execute at shell startup"
zshrc/#2 = 
zshrc/#3 = 
zshrc/#4 = "#elektra configuration:"
zshrc/#5 = "#"
zshrc/#6 = "# should replace aliases, exports and hashes below"
zshrc/#7 = "#"
zshrc/#8 = "# Source functions in /etc/profile.d/"
zshrc/#9 = "#"
zshrc/#_10 = "#for i in /etc/profile.d/* ; do"
zshrc/#_11 = "#    if [ -r "$i" ]; then"
zshrc/#_12 = "#        #echo sourcing $i"
zshrc/#_13 = "#        source $i"
zshrc/#_14 = "#    fi"
zshrc/#_15 = "#done"
zshrc/#_16 = 
zshrc/#_17 = "#some aliases"
zshrc/#_18 = "alias a="sudo aptitude"		# run aptitude"
zshrc/#_19 = "alias o="open-file-by-name""
zshrc/#_20 = "alias d="diff -pruN"		# differences between files"
zshrc/#_21 = "alias r="recode latin1..utf8"	# recode a file"
zshrc/#_22 = "alias s="festival --tts"	# speak something out"
zshrc/#_23 = "alias p='ps -fu $USER'		# show own processes"
zshrc/#_24 = "alias u='uptime'		# show how long system is up"
zshrc/#_25 = "alias l="ls"			# spell correction of ls"
zshrc/#_26 = "alias s="ls"			# spell correction of ls"
zshrc/#_27 = "alias up="sudo ifup""
zshrc/#_28 = "alias no="yes n"		# why not having no too?"
zshrc/#_29 = "alias ls="ls --color=auto"	# make ls colourful"
zshrc/#_30 = "alias sl="ls"			# spell correction of ls too"
zshrc/#_31 = "alias mv='nocorrect mv'		#"
zshrc/#_32 = "alias cp='nocorrect cp'		#"
zshrc/#_33 = "alias rm='nocorrect rm'		#"
zshrc/#_34 = "alias du="du -h --max-depth=1"	#"
zshrc/#_35 = "alias cd/='cd /'		# forgot a space for cd"
zshrc/#_36 = "alias cd..='cd ..'		# forgot a space for cd"
zshrc/#_37 = "alias mkdir='nocorrect mkdir'	#"
zshrc/#_38 = "alias man='nocorrect man'	#"
zshrc/#_39 = "alias kdb='nocorrect noglob kdb'"
zshrc/#_40 = "alias bin/kdb='nocorrect noglob bin/kdb'"
zshrc/#_41 = "alias kdb-full='nocorrect noglob kdb-full'"
zshrc/#_42 = "alias bin/kdb-full='nocorrect noglob bin/kdb-full'"
zshrc/#_43 = "alias kdb-static='nocorrect noglob kdb-static'"
zshrc/#_44 = "alias bin/kdb-static='nocorrect noglob bin/kdb-static'"
zshrc/#_45 = "alias find='noglob find'	#"
zshrc/#_46 = "alias make='nocorrect make'	# do not correct make test to tests if "tests" folder is present"
zshrc/#_47 = "alias down="sudo ifdown""
zshrc/#_48 = "alias diet-gcc="diet gcc -s -Os -pipe""
zshrc/#_49 = "alias remod="sudo rmmod ipw2200 && sudo modprobe ipw2200 ""
zshrc/#_50 = "alias list="sudo iwlist eth1 scan" "
zshrc/#_51 = "alias gping="ping www.google.at""
zshrc/#_52 = "alias starte="kfmclient exec""
zshrc/#_53 = "alias xfig="xfig -specialtext -latexfonts -startlatexFont default""
zshrc/#_54 = "alias lintian="lintian -EI --color=auto --pedantic""
zshrc/#_55 = "alias reprepro="reprepro -b ~reprepro""
zshrc/#_56 = "alias git-undo-last-commit="git reset --soft HEAD~""
zshrc/#_57 = "alias clang-format="clang-format-3.8 -style=file -i ""
zshrc/#_58 = 
zshrc/#_59 = "#autocomplete aliases:"
zshrc/#_60 = zstyle ':completion:*' completer _expand_alias _complete _ignored
zshrc/#_61 = 
zshrc/#_62 = 
zshrc/#_63 = 
zshrc/#_64 = 
zshrc/#_65 = "# ^A:multiuser on[RET]"
zshrc/#_66 = "# screen -x"
zshrc/#_67 = 
zshrc/#_68 = "# presentation using aliases (for completion)"
zshrc/#_69 = "alias 0="man man --elektra:MANWIDTH=40""
zshrc/#_70 = 
zshrc/#_71 = "# KONFIGURATIONSDATEIEN per key/value zugreifen"
zshrc/#_72 = 
zshrc/#_73 = "alias 1='kdb set user/env/override/MANOPT -- "-LC"'"
zshrc/#_74 = 
zshrc/#_75 = "# PROXY Ã„NDERN"
zshrc/#_76 = 
zshrc/#_77 = "alias 3="kdb set system/env/override/http_proxy http://proxy.hogege.com:8000""
zshrc/#_78 = 
zshrc/#_79 = "alias 5="wget --elektra-debug www.complang.tuwien.ac.at""
zshrc/#_80 = 
zshrc/#_81 = "# MOTIVATION ftp proxy, auch Ã¼ber Konfigurationsdatei im Paper"
zshrc/#_82 = 
zshrc/#_83 = "alias 4="kdb setmeta spec/env/override/ftp_proxy 'override/#0' /env/override/http_proxy""
zshrc/#_84 = 
zshrc/#_85 = "# Umsetzung"
zshrc/#_86 = 
zshrc/#_87 = "alias 6="kdb get -v /env/override/ftp_proxy""
zshrc/#_88 = 
zshrc/#_89 = 
zshrc/#_90 = "#alias 5="kdb set user/env/option/debug""
zshrc/#_91 = 
zshrc/#_92 = "# kann man weglassen"
zshrc/#_93 = "alias 2='kdb mount env.ini /env ni'"
zshrc/#_94 = 
zshrc/#_95 = "# kdb file /env"
zshrc/#_96 = 
zshrc/#_97 = "#pipes stderr"
zshrc/#_98 = "#alias -g P='>&2 2>&1 |'"
zshrc/#_99 = 
zshrc/#__100 = "# Creates a directory and changes into it at one command"
zshrc/#__101 = function mkcd() {
zshrc/#__102 = "	[ -n "$1" ] && mkdir -p "$@" && cd "$1""
zshrc/#__103 = }
zshrc/#__104 = 
zshrc/#__105 = "#some hashes"
zshrc/#__106 = "#(more in .zshrc-local or elektra)"
zshrc/#__107 = "hash -d m=/home/user/MyDocs"
zshrc/#__108 = 
zshrc/#__109 = "HISTFILE=${HOME}/.zsh_history	# name of history file"
zshrc/#__110 = "HISTSIZE=500000			# internal history (larger for duplicated events)"
zshrc/#__111 = "SAVEHIST=450000			# history in files"
zshrc/#__112 = "DIRSTACKSIZE=10			# stack of directories"
zshrc/#__113 = "MAIL=/var/mail/$USERNAME	# where are new mails?"
zshrc/#__114 = "MAILCHECK=30			# check mails every 30 sec"
zshrc/#__115 = "#REPLYTO=ich@markus-raab.org	# reply to"
zshrc/#__116 = "LOGCHECK=30			# check login/logout every 30 sec"
zshrc/#__117 = 
zshrc/#__118 = unset TMOUT			# don't timeout the session
zshrc/#__119 = 
zshrc/#__120 = bindkey -v                      # vi key bindings
zshrc/#__121 = 
zshrc/#__122 = "bindkey "^[[A" history-beginning-search-backward"
zshrc/#__123 = "bindkey "^[[B" history-beginning-search-forward"
zshrc/#__124 = "# Use up and down key to search in the history with the current text"
zshrc/#__125 = "# !word<tab> will autocomplete in the history"
zshrc/#__126 = "# (up and down key can be used afterwards too)"
zshrc/#__127 = "# use <ESC> + / to search backwards in the history (? to search forward)"
zshrc/#__128 = "# (n(next) and N(previous) will scroll in the history in this mode)"
zshrc/#__129 = 
zshrc/#__130 = 
zshrc/#__131 = setopt always_to_end		# move to end of word when completing
zshrc/#__132 = setopt append_history		# don't overwrite history file (multiple!)
zshrc/#__133 = setopt share_history		# share history between multiple sessions
zshrc/#__134 = setopt auto_cd			# change to directory when entering it as command
zshrc/#__135 = setopt auto_menu		# use menu completion
zshrc/#__136 = setopt auto_pushd		# cd will push old directory on stack
zshrc/#__137 = setopt NO_hup			# don't HUP running jobs when shell exits
zshrc/#__138 = setopt NO_beep			# don't beep around
zshrc/#__139 = setopt NO_hist_beep		# also don't beep at no history
zshrc/#__140 = setopt NO_list_beep		#
zshrc/#__141 = setopt correct_all		# correct all arguments in a line
zshrc/#__142 = setopt extended_glob		# tread ~, ^ as part of patterns
zshrc/#__143 = setopt extended_history		# save timestamps of history
zshrc/#__144 = setopt glob_complete		# cycle through glob possibilities
zshrc/#__145 = setopt hist_expire_dups_first	# duplicate internal events
zshrc/#__146 = setopt hist_find_no_dups	# but don't find duplicates
zshrc/#__147 = setopt hist_ignore_all_dups	# and ignore them
zshrc/#__148 = setopt hist_ignore_dups		# and don't put same commands to history
zshrc/#__149 = setopt hist_ignore_space	# first character a space -> don't put to history
zshrc/#__150 = setopt hist_reduce_blanks	# reduce blanks from command line in history
zshrc/#__151 = setopt hist_save_no_dups	# older commands that duplicate are omitted
zshrc/#__152 = setopt hist_verify		# perform history expansion and reload line
zshrc/#__153 = setopt interactive_comments	# i always want comments
zshrc/#__154 = setopt list_packed		# put list in columns
zshrc/#__155 = setopt list_types		# show trailing identifying mark
zshrc/#__156 = setopt null_glob		# delete globs without match instead of asking
zshrc/#__157 = setopt pushd_ignore_dups	# ignore dups on directory stack
zshrc/#__158 = setopt pushd_silent		# be silent after pushd and popd
zshrc/#__159 = "#setopt completion-ignore-case"
zshrc/#__160 = 
zshrc/#__161 = 
zshrc/#__162 = zstyle ':completion:*:cd:*' ignore-parents parent pwd #cd will never select the parent directory (e.g.: cd ../<TAB>):
zshrc/#__163 = 
zshrc/#__164 = "# prompt, right prompt, don't see XX possibilities and spelling prompt"
zshrc/#__165 = "EXITCODE="%(?..%?%1v )""
zshrc/#__166 = "#old one without exit codes:"
zshrc/#__167 = "#PS1=$'%{\e[0;36m%}%n@%m:%4c%1v%{\e[0m%}> '"
zshrc/#__168 = 
zshrc/#__169 = "PS1=$'%(?..%?%1v )%{\e[0;36m%}%n@%m:%4c%1v%{\e[0m%}> '"
zshrc/#__170 = "RPS1=$'%{\e[0;36m%}%D{%A %T}%{\e[0m%}'"
zshrc/#__171 = 
zshrc/#__172 = "# FOR asciinema:"
zshrc/#__173 = "#PS1=$'%(?..%?%1v )%{\e[0;36m%}%4c%1v%{\e[0m%}> '"
zshrc/#__174 = "#RPS1="
zshrc/#__175 = "#alias sudo='nocorrect sudo'"
zshrc/#__176 = "LISTPROMPT=''"
zshrc/#__177 = "SPROMPT='zsh: correct '%R' to '%r' ? ([Y]es/[N]o/[E]dit/[A]bort) '"
zshrc/#__178 = "LPDEST=lj"
zshrc/#__179 = 
zshrc/#__180 = "#activate coredumps"
zshrc/#__181 = ulimit -c unlimited
zshrc/#__182 = 
zshrc/#__183 = "#load other modules from ~/.zshfiles"
zshrc/#__184 = "fpath=(~/.zshfiles $fpath)"
zshrc/#__185 = autoload -U ~/.zshfiles*(:t)
zshrc/#__186 = 
zshrc/#__187 = "#load compinit"
zshrc/#__188 = autoload -U compinit		# full features tab completion
zshrc/#__189 = compinit -C			# start the tab completion
zshrc/#__190 = zmodload -i zsh/complist	# Color completion (For menu selection)
zshrc/#__191 = 
zshrc/#__192 = "#load local files"
zshrc/#__193 = . ~/.zshrc-local
zshrc/#__194 = . ~/.env.sh
zshrc/#__195 = 
zshrc/#__196 = "#list running screens"
zshrc/#__197 = "#if [[ -x $(which screen) ]]"
zshrc/#__198 = "#then"
zshrc/#__199 = "#    ZSHRC_SCREENLIST=(${${(M)${(f)"$(screen -ls)"}:#(#s)?:space:##([0-9]##).*}/(#b)?:space:#([0-9]##).*/$match[1]})"
zshrc/#__200 = "#    if [[ $#ZSHRC_SCREENLIST -ge 1 ]]"
zshrc/#__201 = "#    then"
zshrc/#__202 = "#        echo "There are $#ZSHRC_SCREENLIST screens running. $ZSHRC_SCREENLIST""
zshrc/#__203 = "#    fi"
zshrc/#__204 = "#fi"
zshrc/#__205 = 
zshrc/#__206 = "#for i in viins vicmd; do"
zshrc/#__207 = "#	bindkey -M "$i" "${key[Up]}" vi-up-line-or-history"
zshrc/#__208 = "#	bindkey -M "$i" "${key[Down]}" vi-down-line-or-history"
zshrc/#__209 = "#done"
zshrc/#__210 = "#unset i"
zshrc/#__211 = 
zshrc/#__212 = "#[[ -n "${key[Up]}" ]] && bindkey "${key[Up]}" history-search-backward"
zshrc/#__213 = "#[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" history-search-forward"
zshrc/#__214 = 
zshrc/#__215 = "#switch between vim and shell"
zshrc/#__216 = fancy-ctrl-z () {
zshrc/#__217 = "	if [[ $#BUFFER -eq 0 ]]; then"
zshrc/#__218 = "		BUFFER="fg""
zshrc/#__219 = "		zle accept-line"
zshrc/#__220 = "	else"
zshrc/#__221 = "		zle push-input"
zshrc/#__222 = "		zle clear-screen"
zshrc/#__223 = "	fi"
zshrc/#__224 = }
zshrc/#__225 = zle -N fancy-ctrl-z
zshrc/#__226 = bindkey '^Z' fancy-ctrl-z
zshrc/#__227 = 
zshrc/#__228 = autoload up-line-or-beginning-search
zshrc/#__229 = autoload down-line-or-beginning-search
zshrc/#__230 = zle -N up-line-or-beginning-search
zshrc/#__231 = zle -N down-line-or-beginning-search
zshrc/#__232 = 
zshrc/#__233 = "[[ -n "${key[Up]}"      ]]  && bindkey   "${key[Up]}"       up-line-or-beginning-search"
zshrc/#__234 = "[[ -n "${key[Down]}"    ]]  && bindkey   "${key[Down]}"    down-line-or-beginning-search"
zshrc/#__235 = 
zshrc/#__236 = "#start up screen, if not already in"
zshrc/#__237 = "#if [ -z $STY ]; then"
zshrc/#__238 = "#        screen -D -R"
zshrc/#__239 = "#fi"
[none/testini/v1]
[org.apache/apache/v2.4.10]
#@META author = pnirschl
#@META createdat = 1482258571
#@META description = Fooling around
#@META plugin = ini
#@META tags = test
#@META title = Test
#@META views = 7
[none/testini/v1]
test = 
[org.apache/apache/v2.4.10]
apache2-configuration-of-wwwlibelektraorg = 
apache2-configuration-of-wwwlibelektraorg/#0 = <IfModule mod_ssl.c>
apache2-configuration-of-wwwlibelektraorg/#1 = <VirtualHost *:443>
apache2-configuration-of-wwwlibelektraorg/#2 = "        ServerName www.libelektra.org"
apache2-configuration-of-wwwlibelektraorg/#3 = "        ServerAdmin webmaster@libelektra.org"
apache2-configuration-of-wwwlibelektraorg/#4 = 
apache2-configuration-of-wwwlibelektraorg/#5 = "        DocumentRoot "/usr/local/share/elektra/tool_data/rest-frontend/public""
apache2-configuration-of-wwwlibelektraorg/#6 = "        Alias "/ftp" "/srv""
apache2-configuration-of-wwwlibelektraorg/#7 = 
apache2-configuration-of-wwwlibelektraorg/#8 = "        <Directory />"
apache2-configuration-of-wwwlibelektraorg/#9 = "                FallbackResource /index.html"
apache2-configuration-of-wwwlibelektraorg/#_10 = "                Options +Indexes +MultiViews"
apache2-configuration-of-wwwlibelektraorg/#_11 = "                AllowOverride None"
apache2-configuration-of-wwwlibelektraorg/#_12 = "                Require all granted"
apache2-configuration-of-wwwlibelektraorg/#_13 = "                Allow from all"
apache2-configuration-of-wwwlibelektraorg/#_14 = "        </Directory>"
apache2-configuration-of-wwwlibelektraorg/#_15 = 
apache2-configuration-of-wwwlibelektraorg/#_16 = "        <Directory /srv>"
apache2-configuration-of-wwwlibelektraorg/#_17 = "                FallbackResource disabled"
apache2-configuration-of-wwwlibelektraorg/#_18 = "                Options +Indexes +MultiViews"
apache2-configuration-of-wwwlibelektraorg/#_19 = "                AllowOverride None"
apache2-configuration-of-wwwlibelektraorg/#_20 = "                Require all granted"
apache2-configuration-of-wwwlibelektraorg/#_21 = "                Allow from all"
apache2-configuration-of-wwwlibelektraorg/#_22 = "        </Directory>"
apache2-configuration-of-wwwlibelektraorg/#_23 = 
apache2-configuration-of-wwwlibelektraorg/#_24 = "        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,"
apache2-configuration-of-wwwlibelektraorg/#_25 = "        # error, crit, alert, emerg."
apache2-configuration-of-wwwlibelektraorg/#_26 = "        # It is also possible to configure the loglevel for particular"
apache2-configuration-of-wwwlibelektraorg/#_27 = "        # modules, e.g."
apache2-configuration-of-wwwlibelektraorg/#_28 = "        LogLevel info"
apache2-configuration-of-wwwlibelektraorg/#_29 = 
apache2-configuration-of-wwwlibelektraorg/#_30 = "        ErrorLog ${APACHE_LOG_DIR}/error.log"
apache2-configuration-of-wwwlibelektraorg/#_31 = "        CustomLog ${APACHE_LOG_DIR}/access.log combined"
apache2-configuration-of-wwwlibelektraorg/#_32 = 
apache2-configuration-of-wwwlibelektraorg/#_33 = "        # For most configuration files from conf-available/, which are"
apache2-configuration-of-wwwlibelektraorg/#_34 = "        # enabled or disabled at a global level, it is possible to"
apache2-configuration-of-wwwlibelektraorg/#_35 = "        # include a line for only one particular virtual host. For example the"
apache2-configuration-of-wwwlibelektraorg/#_36 = "        # following line enables the CGI configuration for this host only"
apache2-configuration-of-wwwlibelektraorg/#_37 = "        # after it has been globally disabled with "a2disconf"."
apache2-configuration-of-wwwlibelektraorg/#_38 = "        #Include conf-available/serve-cgi-bin.conf"
apache2-configuration-of-wwwlibelektraorg/#_39 = 
apache2-configuration-of-wwwlibelektraorg/#_40 = "        SSLCertificateFile /etc/letsencrypt/live/restapi.libelektra.org/fullchain.pem"
apache2-configuration-of-wwwlibelektraorg/#_41 = "        SSLCertificateKeyFile /etc/letsencrypt/live/restapi.libelektra.org/privkey.pem"
apache2-configuration-of-wwwlibelektraorg/#_42 = "        Include /etc/letsencrypt/options-ssl-apache.conf"
apache2-configuration-of-wwwlibelektraorg/#_43 = </VirtualHost>
apache2-configuration-of-wwwlibelektraorg/#_44 = 
apache2-configuration-of-wwwlibelektraorg/#_45 = "# vim: syntax=apache ts=4 sw=4 sts=4 sr noet"
apache2-configuration-of-wwwlibelektraorg/#_46 = </IfModule>
[nanana.batman/git/v1/pro-test/core]
editor = mate -w
	"quotepath = false"
[nanana.batman/git/v1/pro-test/mergetool "Kaleidoscope"]
cmd = "ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot"
	"trustexitcode = true"
[nanana.batman/git/v1/pro-test/merge]
tool = Kaleidoscope
[nanana.batman/git/v1/pro-test/difftool "Kaleidoscope"]
cmd = "ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\""
[nanana.batman/git/v1/pro-test/diff]
tool = Kaleidoscope
[nanana.batman/git/v1/pro-test/difftool "sourcetree"]
cmd = "opendiff \"$LOCAL\" \"$REMOTE\""
	"path ="
[nanana.batman/git/v1/pro-test/branch]
autosetuprebase = always
[nanana.batman/git/v1/pro-test/git-tmbundle]
ext-app = stree
	"ext-custom-cmd = ksdiff"
[nanana.batman/git/v1/pro-test/filter "lfs"]
clean = git-lfs clean %f
	"smudge = git-lfs smudge %f"
	"required = true"
[nanana.batman/git/v1/pro-test/mergetool "sourcetree"]
cmd = "/Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\""
	"trustExitCode = true"
[nanana.batman/git/v1/pro-test/commit]
gpgsign = true
[nanana.batman/git/v1/pro-test/gpg]
program = /usr/local/bin/gpg
